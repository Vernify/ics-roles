---
# Cleanup tasks for removed users (only runs when user_management_remove_unknown_users is true)
# Note: The audit task (user_audit.yml) must run first to populate user_management_unmanaged_users

- name: Use unmanaged users list from audit for cleanup
  ansible.builtin.set_fact:
    user_management_users_to_remove: "{{ user_management_unmanaged_users | default([]) }}"

- name: Backup home directories of users to be removed
  community.general.archive:
    path: "{{ '/home/' + user_management_user_to_remove }}"
    dest: "/var/backups/user_{{ user_management_user_to_remove }}_{{ ansible_date_time.epoch }}.tar.gz"
    format: gz
    mode: '0600'
  become: true
  loop: "{{ user_management_users_to_remove }}"
  loop_control:
    loop_var: user_management_user_to_remove
  when:
    - user_management_backup_removed_users | bool
    - user_management_users_to_remove | length > 0
  failed_when: false

- name: Remove unknown users
  ansible.builtin.user:
    name: "{{ user_management_user_to_remove }}"
    state: absent
    remove: "{{ user_management_remove_user_home }}"
  become: true
  loop: "{{ user_management_users_to_remove }}"
  loop_control:
    loop_var: user_management_user_to_remove
  when: user_management_users_to_remove | length > 0

- name: Log removed users
  ansible.builtin.debug:
    msg: "Removed users: {{ user_management_users_to_remove | join(', ') }}"
  when: user_management_users_to_remove | length > 0
